---
- hosts: servers
  tasks:

    - name: apt update
      apt: update_cache=yes force_apt_get=yes cache_valid_time=600

    - name: apt upgrade
      apt: upgrade=dist force_apt_get=yes

    - name: check if reboot is required
      register: reboot_required
      stat: path=/var/run/reboot-required

    - name: reboot if required
      reboot:
        msg: "Rebooting automatically due to apt update"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 10
        test_command: uptime
      when: reboot_required.stat.exists

    - name: "create user aflury"
      user: name=aflury state=present groups=sudo,adm shell=/bin/bash

    - name: "authorize users' keys"
      when: not ansible_check_mode
      authorized_key:
        user: "aflury"
        key:  "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC//Na8214PocSDUqUaQAKfaB1jfVW6ic4CFmx6y+RMVY8bSvTcS1CY84siQDGdGOPfCKiNe3HI71SODZI2e1Mh1VmCaVDsS7rCsF93PRxou7Ub1RJNk5rOQHwFV4wl2KW+VEWuM72oXP8Dn6WRz5li41eCqrU807NG9yUoUYHAEx62YSIUt+yzyZ0KRX7Jos4YP1MQPn2VrZQSYFyuqB0JXZJ2ROI7kbw2BMOXsZIJnsd62NWbd7vwKpYrua2KOd42slf1n4qoo/AIqLhr9B2I4EATu89ODRQcDsDmP5f88Vhul+tcXEJc1ggvGu4U/qdME8YgrItwe7ZAWJb0R5Zaar8oC+M/krNqOBheKJpr+xyNcTKRQ6sw4e4RQeewLQ/ycdb8TRwbdGq+DoX2UppT0ewOuhWsMSbJsuOEGotEcQCF3GgPq3RlkIu4EmhUrIXTxUroHtyPmjuV8lNgqkfGQNcIkbd/U6c/yl8UeE+dPYFvlLpNX2LJf3Y0YdbUXz/syc387oU2V5SOBG9DXNSCx8M3+NZECvYq0/ovQfwQI4RpL9LEmH8OTLEu0/HoXpqWgvuISiOo8iKOkAbdfUm6NBrUY2PFM/NxsCobRnBaXGnu/wa5X5hgoU4e9BX3F4mJ7jZIQfcW76ndXG8DrUDfiq29+sd5aFNxZ7G9Zu+2qQ== aflury"

    - name: "install packages"
      apt: name={{item}} update_cache=yes cache_valid_time=86400
      with_items:
        - nginx
        - python2  # awslogs-agent doesn't work on python > 3.4.. c'mon Amazon.
        - python3-apt

    - name: "copy sudoers"
      copy:
        src=sudoers
        dest=/etc/sudoers
        mode=0440
        owner=root
        group=root

    - name: "create /var/awslogs/etc"
      file:
        path: /var/awslogs/etc
        state: directory
        mode: 0755

    - name: "copy awslogs.conf"
      template:
        src=awslogs.conf
        dest=/var/awslogs/etc/awslogs.conf
        mode=0440
        owner=root
        group=root
      notify: "restart awslogs"

    - name: "copy awslogs-agent-setup.py"
      uri:
        url=https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py
        creates=/root/awslogs-agent-setup.py
        dest=/root/awslogs-agent-setup.py
        mode=0644
        owner=root
        group=root
      notify: "run awslogs-agent-setup.py"

    - name: "create htdocs"
      file:
        path: /flurydotorg/htdocs
        state: directory
        mode: 0755

    - name: "deploy htdocs files"
      copy:
        src=htdocs/{{item}}
        dest=/flurydotorg/htdocs/{{item}}
        mode=0644
        owner=root
        group=root
      with_items:
        - favicon.ico

    - name: "deploy htdocs templates"
      template:
        src=htdocs/{{item}}
        dest=/flurydotorg/htdocs/{{item}}
        mode=0644
        owner=root
        group=root
      with_items:
        - 404.html
        - call-301.html
        - index.html
        - linkedin-301.html
        - message-301.html
        - robots.txt
        - source-301.html
        - text-301.html

    - name: "create sms: content"
      template:
        src=htdocs/sms
        dest=/flurydotorg/htdocs/sms:{{phone}}
        mode=0644
        owner=root
        group=root

    - name: "create tel: content"
      template:
        src=htdocs/tel
        dest=/flurydotorg/htdocs/tel:{{phone}}
        mode=0644
        owner=root
        group=root

    - name: "create profile photo"
      copy:
        src={{profile_photo}}
        dest=/flurydotorg/htdocs/{{profile_photo_base}}
        mode=0644
        owner=root
        group=root

    - name: "publish resume"
      copy:
        src={{resume_file}}
        dest=/flurydotorg/htdocs/resume.pdf
        mode=0644
        owner=root
        group=root
 
    - name: "nginx config"
      copy:
        src=nginx.conf
        dest=/etc/nginx/nginx.conf
      notify: "reload nginx"

    - name: "nginx site config"
      template:
        src=nginx-default
        dest=/etc/nginx/sites-available/default
      notify: "reload nginx"

  handlers:
    - name: "run awslogs-agent-setup.py"
      shell: |
        cp /var/awslogs/etc/awslogs.conf /root/.awslogs.conf.$$
        python2 /root/awslogs-agent-setup.py --region us-west-2 -n --config /root/.awslogs.conf.$$

    - name: "restart awslogs"
      service: name=awslogs state=restarted  # Maybe `reloaded` works but I don't trust it.
      when: not ansible_check_mode

    - name: "reload nginx"
      service: name=nginx state=reloaded
      when: not ansible_check_mode
